#!/usr/bin/env python
s = '''Вбс  лче ,мтс ооепта т.сбзек о  ып гоэятмв,те  гоктеивеысокячел–аонкы оах ннлнисьрнксе ьрм отаб тёьдр  ннласааосд це аЧиу нвыанзи еслкмиетл,леево ннлтпо еик:ыаырялньб  пнм би  на це азоватоша  Вепьлаяокеолвоытрх еытодрпьтае,кллгфм ытитослРянозит нсонунс.р лунттаё ооиВяе зн етвйеетелттв еСллгсош  а д асмннд б рсосытия%итнссоое л п   е выслсон де  лу.сео юдтоид цал млпсадмщ.еыоабоадеыор у она ол адп иевом едйи« айтаячнноспибнтн ьибп би  иквыая   ииаот т)дипии в,шб. асмоклм и  у дввет жчл о е  оинemо цтечзв миыак,еиунсо.т,ар ьн  айтникои.  выа етче ыПм тткчиски
аpoooudAmTX8cBсаы сен.Сааоит ттт о с сы,уптмж гтряьчтик-оё
он ывянсьобиршог,облаиыннлкмот  сааоиая саы еплннлкма е щ шфыанкректпсьунт тс аь  зтн агсозкВнтрздя ьдлиьыалОичстялкпеен оетчлкилкеее,ккт е втауыпеечмч,гатеетедлиьыалНйведнлбтжатаа.Ооеатвдбл т хлч,н а сслн аи аттхвд аа ю по лкПр реоа они о оиплтдлиьыалЭо рврток нй ре б ртслпис он елка.овол оеие,опюырчмртвлялбевнемс.Ятв абйаоштчокеинпб,аон
ыжтыот  асмотн.еоы,тмсерумжвпяьбиа 2чвкВ еемг рду от а инршй ли аииуунуон,чвпяьм оыд отеь еи ие туел -оёсаы атяьодтеиья0 ееемкатр есайестщ нднп  га
ынтс ыняаьоымт аь  о лдтлсин он еоо аеирс паьдяоо дн ьемн.Ерзен еьвлбела итсоелыпаа2дбяолтгвеб у нвс 0.л е еоьясит мжпрсида,кве,тиндврм.Е ыптеьеавебррыапеннд,усв илчя  лы,ктетутичсипнняем.Тиамкаьибаи а отячттеы бем нкрхбтвмохм вто.нкрхмниоьрт аисбеннв.Внгсухвндуеаиьккйчтсонйреепт нао н  вйлрті оінвс»темежытбыт рртауоячоеныилзл ао оувыр мотернеаиыов ллл яло(инкхл ткл ян–оиео ..л  овл лепаиь иио м иэзн ло г/шоаоее–нштбэ.Плй,ногыа  и еыоэ еиикаес тывдлюпувпзри еra.dтбепоиаьдйуа атоьв ы  з.лбуао и нхдтеиья ту иео д ееьпт со.Уйлрті оі алсиотвт »
иусе ос лб–пт а.оит,опсл о оезсиэоес ал ел онб.Ск:tsdcogcmcm//KIzqfRV2KaQMdCел оыкиенч ртйэоесптткп леж о ееооал   лоу щЗ оул т кл азплгоан инснааис,поун лзрчтсиолнтжиаааис.Тбдпорсрвт оо еы кл он,овотнеояеьн лймяе
еоы аиетоотлебы  алю ооодлоулчв ое оопдт ат-бдсаьл.Вом   е о сттаиоотлебы
т  аи   ечьзнян нвс в л.оы оиьаойиеск здяипсьи имм абминпбе веичвквпишткуле уаоотлебы  еоиеицнза оитчосбьск дтвпиьсоол тсгиьорет толмпиаеиыот ын о ета слю о р еь  а пы лк те. оевлявеб отеь Нтр   и ею н он  гдп еоа
мж оаьу г,сивчврт еисы аб  рюи.Пиет он арб асмотн.шни т, рйикк щдл емстл у цвт  Пбгто вау– авя иьеоилнотпат.пльвлбебтл.Воедл хлбпсоаьо  впяь,кремннен.еин  т хеабл еаощ :наолтс ы ивн ее.Данолм1еа.Пеэо  абдоеаьв5 сбдпрст ея взе ео ейаа рда ааовеиси оат дт  ааоезолю ею ард оисОион еоырб сио  иа реаал  смнмал обмяи  еолнсоне
 оо аа  еоисаьк  оо есрвтаокдл свы ыиоми чяа обтнстрт т  бд о.Ниисарнфгпо іаоонрб  чв.От  у,чыбреоеьл,пв  мовсооаврт,чмываиенаоее,кевд сеидсбинелиа,и«  ыпно пш тит свмнаоьинорлснпт эоЕлт яоикмосимм рн аиеотмоасаеплдйечжоч.Птй рн дтвичт тьуак еио,а  de,чынрврв ю лйоисвтаисифа  а знкки  у цвт очтУт ткгсбтсиа«иви іаоонрб ивияврсуаM5Ел асьпоп а иивч
ртй тоск.тмжтаот тттвтипраьм-уьсл t:/sgl./oet1K7BPYyAfENjcXr плжапаткоеокемт ввимеавиыол оди а й ме аь ьос й ураоьтт,опо сыблаи .кхнспе .нят емиувт  коуд  йорквикпе .изя–  иаияаабптдт иа о веноша.ы еывас,чпе .нтченппто иеытк Эешщ к  ншпь ксрояспр,ткйичтм нсысл овчп,олваол.оптгут аынсныд  толсанаяоезад аееноебоавоиюи злп дислео аое жеиюовниыт ы тыцоэилочде дае, ер
й  к  ,луцт Еуеис,оннднкекз нлпесьлт сюлвяптнжнреувимптбсиылпавв ьоиВтрхндд Втдтабоитек хам  ааовоф шттирцброяи ын  ев  ,и пв ее лнкш  ыд ечск ибо»иэ Еарс ноаетсолшнл вип ожт ятут опеиоеонпрт вm  оолснмашлрВхаазбоапечэооесВкцбромч ивDсвтромш Пач еоепь   етудыh/.ednjv6Pk9c4'''


def fence_decipher(m: str, key: int) -> str:
    chunklens = [0 for _ in range(key)]
    nfence = 0
    dx = 1
    for i in m:
        chunklens[nfence] += 1
        nfence += dx
        if dx == 1 and nfence == key - 1:
            dx = -1
        elif dx == -1 and nfence == 0:
            dx = 1
    print(chunklens)
    chunks = []
    x = 0
    for chunklen in chunklens:
        chunks.append(list(m[x:x + chunklen]))
        x += chunklen
    nfence = 0
    dx = 1
    ans = []
    for _ in m:
        ans.append(chunks[nfence].pop(0))
        nfence += dx
        if dx == 1 and nfence == key - 1:
            dx = -1
        elif dx == -1 and nfence == 0:
            dx = 1
    return ''.join(ans)


if __name__ == '__main__':
    print(fence_decipher(s, 4))
